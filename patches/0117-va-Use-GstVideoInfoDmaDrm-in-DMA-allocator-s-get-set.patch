From 892d619db72fbb9880246d01b1809ea46c7fcfc6 Mon Sep 17 00:00:00 2001
From: He Junyan <junyan.he@intel.com>
Date: Wed, 14 Jun 2023 16:32:52 +0800
Subject: [PATCH 117/122]  va: Use GstVideoInfoDmaDrm in DMA allocator's
 get/set_format() API

---
 .../gst-libs/gst/va/gstvaallocator.c          | 43 ++++++++++---------
 .../gst-libs/gst/va/gstvaallocator.h          |  4 +-
 .../sys/va/gstvabasetransform.c               | 12 ++++--
 .../gst-plugins-bad/sys/va/gstvacompositor.c  | 10 ++++-
 4 files changed, 41 insertions(+), 28 deletions(-)

diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c
index 20992456a2..8070d17cf7 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c
@@ -41,6 +41,10 @@
 #include <sys/types.h>
 #include <unistd.h>
 #include <libdrm/drm_fourcc.h>
+#else
+#define DRM_FORMAT_INVALID     0
+#define DRM_FORMAT_MOD_LINEAR  0ULL
+#define DRM_FORMAT_MOD_INVALID 0xffffffffffffff
 #endif
 
 #include "gstvasurfacecopy.h"
@@ -446,6 +450,8 @@ gst_va_dmabuf_allocator_init (GstVaDmabufAllocator * self)
   self->parent_copy = allocator->mem_copy;
   allocator->mem_copy = gst_va_dmabuf_mem_copy;
 
+  gst_video_info_dma_drm_init (&self->info);
+
   gst_va_memory_pool_init (&self->pool);
 }
 
@@ -547,7 +553,7 @@ _va_create_surface_and_export_to_dmabuf (GstVaDisplay * display,
   VASurfaceAttribExternalBuffers *extbuf = NULL, ext_buf;
   GstVideoFormat format;
   VASurfaceID surface;
-  guint64 prev_modifier;
+  guint64 prev_modifier = DRM_FORMAT_MOD_INVALID;
 
   _init_debug_category ();
 
@@ -692,7 +698,7 @@ gst_va_dmabuf_allocator_setup_buffer_full (GstAllocator * allocator,
   g_return_val_if_fail (GST_IS_VA_DMABUF_ALLOCATOR (allocator), FALSE);
 
   if (!_va_create_surface_and_export_to_dmabuf (self->display, self->usage_hint,
-          NULL, 0, &self->info.vinfo, &surface, &desc))
+          &self->info.drm_modifier, 1, &self->info.vinfo, &surface, &desc))
     return FALSE;
 
   buf = gst_va_buffer_surface_new (surface);
@@ -957,16 +963,16 @@ gst_va_dmabuf_allocator_try (GstAllocator * allocator)
 /**
  * gst_va_dmabuf_allocator_set_format:
  * @allocator: a #GstAllocator
- * @info: (in) (out caller-allocates) (not nullable): a #GstVideoInfo
+ * @info: (in) (out caller-allocates) (not nullable): a #GstVideoInfoDmaDrm
  * @usage_hint: VA usage hint
  *
  * Sets the configuration defined by @info and @usage_hint for
  * @allocator, and it tries the configuration, if @allocator has not
  * allocated memories yet.
  *
- * If @allocator has memory allocated already, and frame size and
- * format in @info are the same as currently configured in @allocator,
- * the rest of @info parameters are updated internally.
+ * If @allocator has memory allocated already, and frame size, format
+ * and modifier in @info are the same as currently configured in
+ * @allocator, the rest of @info parameters are updated internally.
  *
  * Returns: %TRUE if the configuration is valid or updated; %FALSE if
  * configuration is not valid or not updated.
@@ -975,43 +981,40 @@ gst_va_dmabuf_allocator_try (GstAllocator * allocator)
  */
 gboolean
 gst_va_dmabuf_allocator_set_format (GstAllocator * allocator,
-    GstVideoInfo * info, guint usage_hint)
+    GstVideoInfoDmaDrm * info, guint usage_hint)
 {
   GstVaDmabufAllocator *self;
   gboolean ret;
 
-  /* TODO: change API to pass GstVideoInfoDmaDrm, though ignoring the drm
-   * modifier since that's set by the driver. Still we might want to pass the
-   * list of available modifiers by upstream for the negotiated format */
-
   g_return_val_if_fail (GST_IS_VA_DMABUF_ALLOCATOR (allocator), FALSE);
   g_return_val_if_fail (info, FALSE);
 
   self = GST_VA_DMABUF_ALLOCATOR (allocator);
 
   if (gst_va_memory_pool_surface_count (&self->pool) != 0) {
-    if (GST_VIDEO_INFO_FORMAT (info)
+    if (info->drm_modifier == self->info.drm_modifier
+        && GST_VIDEO_INFO_FORMAT (&info->vinfo)
         == GST_VIDEO_INFO_FORMAT (&self->info.vinfo)
-        && GST_VIDEO_INFO_WIDTH (info)
+        && GST_VIDEO_INFO_WIDTH (&info->vinfo)
         == GST_VIDEO_INFO_WIDTH (&self->info.vinfo)
-        && GST_VIDEO_INFO_HEIGHT (info)
+        && GST_VIDEO_INFO_HEIGHT (&info->vinfo)
         == GST_VIDEO_INFO_HEIGHT (&self->info.vinfo)
         && usage_hint == self->usage_hint) {
-      *info = self->info.vinfo; /* update callee info (offset & stride) */
+      *info = self->info;       /* update callee info (offset & stride) */
       return TRUE;
     }
     return FALSE;
   }
 
   self->usage_hint = usage_hint;
-  self->info.vinfo = *info;
+  self->info = *info;
 
   g_clear_pointer (&self->copy, gst_va_surface_copy_free);
 
   ret = gst_va_dmabuf_allocator_try (allocator);
 
   if (ret)
-    *info = self->info.vinfo;
+    *info = self->info;
 
   return ret;
 }
@@ -1019,7 +1022,7 @@ gst_va_dmabuf_allocator_set_format (GstAllocator * allocator,
 /**
  * gst_va_dmabuf_allocator_get_format:
  * @allocator: a #GstAllocator
- * @info: (out) (optional): a #GstVideoInfo
+ * @info: (out) (optional): a #GstVideoInfoDmaDrm
  * @usage_hint: (out) (optional): VA usage hint
  *
  * Gets current internal configuration of @allocator.
@@ -1031,7 +1034,7 @@ gst_va_dmabuf_allocator_set_format (GstAllocator * allocator,
  */
 gboolean
 gst_va_dmabuf_allocator_get_format (GstAllocator * allocator,
-    GstVideoInfo * info, guint * usage_hint)
+    GstVideoInfoDmaDrm * info, guint * usage_hint)
 {
   GstVaDmabufAllocator *self = GST_VA_DMABUF_ALLOCATOR (allocator);
 
@@ -1039,7 +1042,7 @@ gst_va_dmabuf_allocator_get_format (GstAllocator * allocator,
     return FALSE;
 
   if (info)
-    *info = self->info.vinfo;
+    *info = self->info;
   if (usage_hint)
     *usage_hint = self->usage_hint;
 
diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h
index cf1bcfc8a4..f7b1e9d2c2 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h
@@ -49,11 +49,11 @@ GST_VA_API
 void                  gst_va_dmabuf_allocator_flush       (GstAllocator * allocator);
 GST_VA_API
 gboolean              gst_va_dmabuf_allocator_set_format  (GstAllocator * allocator,
-                                                           GstVideoInfo * info,
+                                                           GstVideoInfoDmaDrm * info,
                                                            guint usage_hint);
 GST_VA_API
 gboolean              gst_va_dmabuf_allocator_get_format  (GstAllocator * allocator,
-                                                           GstVideoInfo * info,
+                                                           GstVideoInfoDmaDrm * info,
                                                            guint * usage_hint);
 
 GST_VA_API
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvabasetransform.c b/subprojects/gst-plugins-bad/sys/va/gstvabasetransform.c
index b3055bce6f..e053579177 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvabasetransform.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvabasetransform.c
@@ -415,8 +415,10 @@ gst_va_base_transform_decide_allocation (GstBaseTransform * trans,
   }
 
   if (GST_IS_VA_DMABUF_ALLOCATOR (allocator)) {
-    gst_va_dmabuf_allocator_get_format (allocator, &self->priv->srcpad_info,
-        NULL);
+    GstVideoInfoDmaDrm dma_info;
+
+    gst_va_dmabuf_allocator_get_format (allocator, &dma_info, NULL);
+    self->priv->srcpad_info = dma_info.vinfo;
   } else if (GST_IS_VA_ALLOCATOR (allocator)) {
     gst_va_allocator_get_format (allocator, &self->priv->srcpad_info, NULL,
         NULL);
@@ -792,8 +794,10 @@ _get_sinkpad_pool (GstVaBaseTransform * self)
   }
 
   if (GST_IS_VA_DMABUF_ALLOCATOR (allocator)) {
-    gst_va_dmabuf_allocator_get_format (allocator, &self->priv->sinkpad_info,
-        NULL);
+    GstVideoInfoDmaDrm dma_info;
+
+    gst_va_dmabuf_allocator_get_format (allocator, &dma_info, NULL);
+    self->priv->sinkpad_info = dma_info.vinfo;
   } else if (GST_IS_VA_ALLOCATOR (allocator)) {
     gst_va_allocator_get_format (allocator, &self->priv->sinkpad_info, NULL,
         NULL);
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvacompositor.c b/subprojects/gst-plugins-bad/sys/va/gstvacompositor.c
index 882bc055db..3f2175816f 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvacompositor.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvacompositor.c
@@ -737,7 +737,10 @@ gst_va_compositor_decide_allocation (GstAggregator * agg, GstQuery * query)
   }
 
   if (GST_IS_VA_DMABUF_ALLOCATOR (allocator)) {
-    gst_va_dmabuf_allocator_get_format (allocator, &vagg->info, NULL);
+    GstVideoInfoDmaDrm dma_info;
+
+    gst_va_dmabuf_allocator_get_format (allocator, &dma_info, NULL);
+    vagg->info = dma_info.vinfo;
   } else if (GST_IS_VA_ALLOCATOR (allocator)) {
     gst_va_allocator_get_format (allocator, &vagg->info, NULL, NULL);
   }
@@ -819,7 +822,10 @@ _get_sinkpad_pool (GstVaCompositor * self, GstVaCompositorPad * pad)
   }
 
   if (GST_IS_VA_DMABUF_ALLOCATOR (allocator)) {
-    gst_va_dmabuf_allocator_get_format (allocator, &info, NULL);
+    GstVideoInfoDmaDrm dma_info;
+
+    gst_va_dmabuf_allocator_get_format (allocator, &dma_info, NULL);
+    info = dma_info.vinfo;
   } else if (GST_IS_VA_ALLOCATOR (allocator)) {
     gst_va_allocator_get_format (allocator, &info, NULL, NULL);
   }
-- 
2.25.1

