From 62181d48f5f3df1127552956af3d4683f247f266 Mon Sep 17 00:00:00 2001
From: He Junyan <junyan.he@intel.com>
Date: Wed, 22 Feb 2023 16:49:38 +0800
Subject: [PATCH 03/11] va: Add modifier information to GstVaDmabufAllocator.

We need the VA DMA allocator to create surfaces based on the
specified modifier value.
---
 .../gst-libs/gst/va/gstvaallocator.c          | 21 +++++++++++++------
 .../gst-libs/gst/va/gstvaallocator.h          |  3 ++-
 .../gst-libs/gst/va/gstvapool.c               |  5 ++++-
 3 files changed, 21 insertions(+), 8 deletions(-)

diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c
index 044ff8860c..32e7e50ecb 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.c
@@ -274,6 +274,7 @@ struct _GstVaDmabufAllocator
   GstMemoryCopyFunction parent_copy;
 
   GstVideoInfo info;
+  guint64 modifier;
   guint usage_hint;
 
   GstVaSurfaceCopy *copy;
@@ -467,6 +468,7 @@ gst_va_dmabuf_allocator_init (GstVaDmabufAllocator * self)
   allocator->mem_map = gst_va_dmabuf_mem_map;
   self->parent_copy = allocator->mem_copy;
   allocator->mem_copy = gst_va_dmabuf_mem_copy;
+  self->modifier = DRM_FORMAT_MOD_INVALID;
 
   gst_va_memory_pool_init (&self->pool);
 }
@@ -684,8 +686,8 @@ gst_va_dmabuf_allocator_setup_buffer_full (GstAllocator * allocator,
 
   g_return_val_if_fail (GST_IS_VA_DMABUF_ALLOCATOR (allocator), FALSE);
 
-  if (!_va_dmabuf_create_and_export_surface (self->display, self->usage_hint,
-          DRM_FORMAT_MOD_INVALID, &self->info, &surface, &desc))
+  if (!_va_dmabuf_create_and_export_surface (self->display,
+          self->usage_hint, self->modifier, &self->info, &surface, &desc))
     return FALSE;
 
   buf = gst_va_buffer_surface_new (surface, format, desc.width, desc.height);
@@ -728,6 +730,11 @@ gst_va_dmabuf_allocator_setup_buffer_full (GstAllocator * allocator,
     gst_mini_object_set_qdata (GST_MINI_OBJECT (mem),
         gst_va_buffer_surface_quark (), buf, buffer_destroy);
 
+    if (desc.objects[i].drm_format_modifier != self->modifier)
+      GST_WARNING_OBJECT (self, "driver bug: modifer of the object is"
+          " 0x%016lx, different from we set 0x%016lx",
+          desc.objects[i].drm_format_modifier, self->modifier);
+
     *drm_mod = desc.objects[i].drm_format_modifier;
     gst_mini_object_set_qdata (GST_MINI_OBJECT (mem), gst_va_drm_mod_quark (),
         drm_mod, g_free);
@@ -950,10 +957,11 @@ gst_va_dmabuf_allocator_try (GstAllocator * allocator)
  * @allocator: a #GstAllocator
  * @info: a #GstVideoInfo
  * @usage_hint: VA usage hint
+ * @modifier: the underlying modifier
  *
- * Sets the configuration defined by @info and @usage_hint for
- * @allocator, and it tries the configuration, if @allocator has not
- * allocated memories yet.
+ * Sets the configuration defined by @info, @usage_hint and @modifier
+ * for @allocator, and it tries the configuration, if @allocator has
+ * not allocated memories yet.
  *
  * If @allocator has memory allocated already, and frame size and
  * format in @info are the same as currently configured in @allocator,
@@ -966,7 +974,7 @@ gst_va_dmabuf_allocator_try (GstAllocator * allocator)
  */
 gboolean
 gst_va_dmabuf_allocator_set_format (GstAllocator * allocator,
-    GstVideoInfo * info, guint usage_hint)
+    GstVideoInfo * info, guint usage_hint, guint64 modifier)
 {
   GstVaDmabufAllocator *self;
   gboolean ret;
@@ -989,6 +997,7 @@ gst_va_dmabuf_allocator_set_format (GstAllocator * allocator,
 
   self->usage_hint = usage_hint;
   self->info = *info;
+  self->modifier = modifier;
 
   g_clear_pointer (&self->copy, gst_va_surface_copy_free);
 
diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h
index cf1bcfc8a4..756b2078d1 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvaallocator.h
@@ -50,7 +50,8 @@ void                  gst_va_dmabuf_allocator_flush       (GstAllocator * alloca
 GST_VA_API
 gboolean              gst_va_dmabuf_allocator_set_format  (GstAllocator * allocator,
                                                            GstVideoInfo * info,
-                                                           guint usage_hint);
+                                                           guint usage_hint,
+                                                           guint64 modifier);
 GST_VA_API
 gboolean              gst_va_dmabuf_allocator_get_format  (GstAllocator * allocator,
                                                            GstVideoInfo * info,
diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c
index f5b77234bc..9e1db70b71 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c
@@ -35,6 +35,9 @@
 #endif
 
 #include "gstvapool.h"
+#ifndef G_OS_WIN32
+#include <libdrm/drm_fourcc.h>
+#endif
 
 GST_DEBUG_CATEGORY_STATIC (gst_va_pool_debug);
 #define GST_CAT_DEFAULT gst_va_pool_debug
@@ -174,7 +177,7 @@ gst_va_pool_set_config (GstBufferPool * pool, GstStructure * config)
 
   if (GST_IS_VA_DMABUF_ALLOCATOR (allocator)) {
     if (!gst_va_dmabuf_allocator_set_format (allocator, &alloc_info,
-            usage_hint))
+            usage_hint, DRM_FORMAT_MOD_INVALID))
       goto failed_allocator;
   } else if (GST_IS_VA_ALLOCATOR (allocator)) {
     if (!gst_va_allocator_set_format (allocator, &alloc_info, usage_hint,
-- 
2.25.1

